//  Created by {{ developer_name }} on {{ current_date }}.

import DesignSystem
import SnapKit

protocol Displays{{ submodule_name }}View: UIView {
    func configure(_ viewModel: {{ submodule_name }}.PresentModuleData.ViewModel)
}

final class {{ submodule_name }}View: UIView {
    // MARK: - Properties

    private let appearance = Appearance()

    // MARK: - Lifecycle

    required init() {
        super.init(frame: .zero)

        addSubviews()
        makeConstraints()
        makeAppearance()
    }

    @available(*, unavailable)
    required init?(coder _: NSCoder) { fatalError("init(coder:) has not been implemented") }
}

// MARK: - Displays{{ submodule_name }}View

extension {{ submodule_name }}View: Displays{{ submodule_name }}View {
    func configure(_: {{ submodule_name }}.PresentModuleData.ViewModel) { }
}

// MARK: - Private

private extension {{ submodule_name }}View {
    struct Appearance { }

    func makeAppearance() {
        backgroundColor = .systemGroupedBackground
    }

    func addSubviews() { }

    func makeConstraints() { }
}
